#+TITLE: Screenshot
#+AUTHOR: Bassam Saeed
#+PROPERTY: header-args  :comments both
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :tangle ~/bin/screenshot.sh
#+PROPERTY: header-args+ :shebang "#!/usr/bin/env bash"

Screenshot utility build on top of the excellent [[https://github.com/naelstrof/maim][ï‚Ž maim]] application. I
have considered moving to a ~rofi~-based system in the future.

* Help
  Extract help and usage out of comments.

  #+begin_src bash
    ### screenshot.sh --- using maim and slop to take screenshots
    ###
    ### Usage:
    ###   screenshot.sh [-ash] [-o output]
    ###
    ### Options:
    ###   -a screenshot active window
    ###   -s allows you to select a region to screenshot
    ###   -h hide cursor in final screenshot

    usage() {
	sed -n 's/^### \?//p' "$0"
	exit 1
    }
  #+end_src
* Determine screenshot directory
  This function is called when the screenshot being taken is not a
  fullscreen one. In that situation it's either a region selection or
  the active In that situation we use the active window as the
  directory to place the screenshot in.

  For most cases this works well but theoretically it might be a
  problem when the selected region isn't actually the active
  window. Or encompasses non active window elements such that the
  active window is a minor part of the selection. In practice I
  haven't really had this be an issue.
  
  #+begin_src bash
    screenshot_dir="$HOME/media/images/screenshots"

    window_title() {
	local title
	title="$(cat /proc/$(xdotool getwindowpid $(xdotool getactivewindow))/comm)"
	screenshot_dir="$screenshot_dir/$title"
	mkdir -p "$screenshot_dir"
    }
  #+end_src
* Handling arguments
  This script accepts the same flags as ~maim~ itself does.
  
  #+begin_src bash
    while getopts ':asho:' OPT; do
	case ${OPT} in
	    a) active_window=1
	       ;;
	    s) select_region=1
	       ;;
	    h) hide_cursor=1
	       ;;
	    \?) usage
		;;
	    :) echo "Invalid option: -$OPTARG requires an argument" 1>&2
	       usage
	       ;;
	esac
    done

    shift "$((OPTIND -1))"
  #+end_src
* Setup
  Now that we've determined which options have been passed to
  ~screenshot.sh~, we can properly handle them. Specifically we're
  properly building the flags to be passed to maim and the correct
  output directory.

  As described above, the window_title function will tell us where
  exactly we'll save the screenshot. If it's a fullscreen screenshot,
  then we'll put it in its own directory.

  #+begin_src bash
    if [ $active_window ]; then
	maim_flags="$maim_flags --window=$(xdotool getactivewindow)"
	window_title
    elif [ $select_region ]; then
	maim_flags="$maim_flags -s"
	window_title
    else
	screenshot_dir="$screenshot_dir/fullscreen"
	mkdir -p "$screenshot_dir"
    fi

    if [ $hide_cursor ]; then
	maim_flags="$maim_flags -u"
    fi
  #+end_src

  We can cleanup the flags and determine the final path of the
  screenshot. Inside the directory we've determined above, we base it
  on the current datetime.

  #+begin_src bash
    date=$(date +%Y.%m.%d_%T)
    screenshot_path="$screenshot_dir/$date.png"
    maim_flags="$(echo $maim_flags | xargs)"
  #+end_src
* Take the screenshot
  Now we have everything we need to take the screenshot. If no flags
  are passed, we need to account for that as well because of the extra
  spacing. There's probably a way to do that without an ~if~ condition
  but bash is annoying.

  #+begin_src bash
    if [ -z "$maim_flags" ]; then
	maim "$screenshot_path"
    else
	maim "$maim_flags" "$screenshot_path"
    fi
  #+end_src
* Send notification
  Send a notification to the desktop about the result of the
  screenshot. Usually it's unsuccessful if the user right-clicks when
  selecting a region or window. Fullscreen is unlikely to ever be
  unsuccessful. ~$?~ checks for the exit status of the last command.

  #+begin_src bash
    if [ $? -eq 1 ]; then
	notify-send "Screenshot" "Cancelled"
    else
	cat "$screenshot_path" | xclip -selection clipboard -t image/png
	notify-send "Screenshot" "Taken"
    fi
  #+end_src
