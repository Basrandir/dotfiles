#+TITLE: Dynamic Gaps
#+AUTHOR: Bassam Saeed
#+PROPERTY: header-args  :comments both
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :tangle ~/bin/dynamicGaps.sh
#+PROPERTY: header-args+ :shebang "#!/usr/bin/env bash"

This is an interesting script that I don't really use anymore. The
idea was that on a large 40-inch, 4K monitor I preferred single
windows to be right in the middle. Ideally in a 1920x2160
resolution. Most applications aren't really designed to take advantage
of the massive increase in horizontal space. And plenty aren't
designed for the extra vertical space either.

However the issue ends up being that most websites these days work
pretty well at that scale so in Firefox I don't really need the excess
padding. In addition the script itself is pretty barebones and could
benefit from updates adding support for moving windows, not just
adding and removing.

Ultimately it's an interesting concept that I want to revisit, but it
will need a decent amount of additional thought and work.

* Code
  Basically this script is meant to be called during ~bspwm~ start and
  run in the background. It monitors for all ~node_add~ and ~node_remove~
  events and then tries to calculate the new number of nodes (windows)
  on a monitor. Based on this calculation it determines the padding.

  Essentially I was the nodes more centered when there's only 1 or 2.

  #+begin_src bash
    bspc subscribe node_add node_remove | while read -r line; do
	lines=$(bspc query -N -n .local.tiled | wc -l)
	if [ $(bspc query -M -m --names) == "HDMI-A-0" ]; then
	    if [ $lines == "1" ]; then
		bspc config -m HDMI-A-0 -d focused left_padding 1000
		bspc config -m HDMI-A-0 -d focused right_padding 1000
	    elif [ $lines == "2" ]; then
		bspc config -m HDMI-A-0 -d focused left_padding 500
		bspc config -m HDMI-A-0 -d focused right_padding 500
	    else
		bspc config -m HDMI-A-0 -d focused left_padding 0
		bspc config -m HDMI-A-0 -d focused right_padding 0
	    fi
	fi
    done
  #+end_src
