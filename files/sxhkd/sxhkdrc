super + alt + {q,r}
     bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
    bspc node -s biggest.window

# set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
    bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

# Move current window to a pre-selected space
super + shift + m
    bspc node -n last.!automatic

# Rotate tree
super + shift + {d,a}
    bspc node @/ -C {forward,backward}

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -200 0,bottom 0 200,top 0 -200,right 200 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -200 0,top 0 200,bottom 0 -200,left 2050 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# move tiled window any direction
super + r : {h,j,k,l}
    STEP=20; SELECTION={1,2,3,4}; \
    bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
    bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

super + Return
    alacritty -e fish

super + @space
    rofi -show-icons -show drun -modi drun

super + shift + p
    rofi-pass

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'

super + shift + s
    screenshot.sh -s

super + F1
    wallpaper.sh

#button9
#    pactl set-source-mute @DEFAULT_SOURCE@ 0

#@button9
#    pactl set-source-mute @DEFAULT_SOURCE@ 1

# These keybindings open up specific Emacs(client) frames.
super + shift + Return
    emacsclient -c -n
super + e; v
    emacsclient -c -e '(vterm)'
super + e; d
    emacsclient -c -e '(dired nil)'
super + e; e
    emacsclient -c -e '(elfeed)'
super + e; c
    bspc rule -a \* -o state=floating && \
    emacsclient -c -F '(quote (name . "capture"))' -e '(activate-capture-frame)'

#
# function keys
#

XF86AudioMute
        pactl set-sink-mute @DEFAULT_SINK@ toggle; \
        media_controls.sh toggle

XF86AudioRaiseVolume
        pactl set-sink-volume @DEFAULT_SINK@ +5%; \
        media_controls.sh raise

XF86AudioLowerVolume
        pactl set-sink-volume @DEFAULT_SINK@ -5%; \
        media_controls.sh lower

XF86MonBrightnessDown
	light -U 5

XF86MonBrightnessUp
	light -A 5