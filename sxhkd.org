#+TITLE: sxhkd
#+AUTHOR: Bassam Saeed
#+PROPERTY: header-args  :comments both
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :tangle ~/.config/sxhkd/sxhkdrc

Nice hotkey daemon for Xorg. Has some decent feature that basically do
everything I'd want. At least for now üòè.

* bspwm
  These defaults are mostly taken straight from the ~bspwm~ repo's
  example directory. I've not seen a need to massively edit these.
*** General
    #+begin_src bash
      # quit/restart bspwm
      super + alt + {q,r}
	      bspc {quit,wm -r}

      # close and kill
      super + {_,shift + }w
	      bspc node -{c,k}

      # alternate between the tiled and monocle layout
      super + m
	      bspc desktop -l next

      # send the newest marked node to the newest preselected node
      super + y
	      bspc node newest.marked.local -n newest.!automatic.local

      # swap the current node and the biggest window
      super + g
	      bspc node -s biggest.window
    #+end_src
*** State/Flags
    #+begin_src bash
      # set the window state
      super + {t,shift + t,s,f}
	      bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

      # set the node flags
      super + ctrl + {m,x,y,z}
	      bspc node -g {marked,locked,sticky,private}
    #+end_src
*** Focus/Swap
    #+begin_src bash
      # focus the node in the given direction
      super + {_,shift + }{h,j,k,l}
	      bspc node -{f,s} {west,south,north,east}

      # focus the node for the given path jump
      super + {p,b,comma,period}
	      bspc node -f @{parent,brother,first,second}

      # focus the next/previous window in the current desktop
      super + {_,shift + }c
	      bspc node -f {next,prev}.local.!hidden.window

      # focus the next/previous desktop in the current monitor
      super + bracket{left,right}
	      bspc desktop -f {prev,next}.local

      # focus the last node/desktop
      super + {grave,Tab}
	      bspc {node,desktop} -f last

      # focus the older or newer node in the focus history
      super + {o,i}
	      bspc wm -h off; \
	      bspc node {older,newer} -f; \
	      bspc wm -h on

      # focus or send to the given desktop
      super + {_,shift + }{1-9,0}
	      bspc {desktop -f,node -d} '^{1-9,10}'

      # Move current window to a pre-selected space
      super + shift + m
	    bspc node -n last.!automatic

      # Rotate tree
      super + shift + {d,a}
	    bspc node @/ -C {forward,backward}
    #+end_src
*** Preselect
    #+begin_src bash
      # preselect the direction
      super + ctrl + {h,j,k,l}
	      bspc node -p {west,south,north,east}

      # preselect the ratio
      super + ctrl + {1-9}
	      bspc node -o 0.{1-9}

      # cancel the preselection for the focused node
      super + ctrl + space
	      bspc node -p cancel

      # cancel the preselection for the focused desktop
      super + ctrl + shift + space
	      bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
    #+end_src
*** Move/Resize
    #+begin_src bash
      # expand a window by moving one of its side outward
      super + alt + {h,j,k,l}
	      bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

      # contract a window by moving one of its side inward
      super + alt + shift + {h,j,k,l}
	      bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

      # move a floating window
      super + {Left,Down,Up,Right}
	      bspc node -v {-20 0,0 20,0 -20,20 0}

      # move tiled window any direction
      super + r : {h,j,k,l}
	    STEP=20; SELECTION={1,2,3,4}; \
	    bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
	    bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)
    #+end_src
*** Adjust Padding
    Utilizes a custom script to add variable amounts of padding to the
    left and right of the screen. Useful for giant 4K monitor setups.

    #+begin_src bash
      # adjust padding
      super + shift + p : {1,2,3}
	      PADDING={900,500,0}; \
	      adjustGaps.sh -l $PADDING -r $PADDING
    #+end_src
* WM independent
  These are mostly custom or edited versions of the provided defaults.
** Core
   Basically the core utilities in the terminal emulator and program
   launcher.

   Terminal Emulator
   #+begin_src bash
     super + Return
	   alacritty -e fish
   #+end_src
*** Launcher
    For some reason, I'm unable to get rofi-emoji and rofi-calc
    working on Nixos. So for that machine (proteus) I need to remove
    those as options.
    #+begin_src bash :tangle (if (equal (system-name) "polaris") "~/.config/sxhkd/sxhkdrc" "no")
      super + @space
	    rofi -show-icons -show drun -modi emoji,calc
    #+end_src

    #+begin_src bash :tangle (if (equal (system-name) "proteus") "~/.config/sxhkd/sxhkdrc" "no")
      super + @space
	    rofi -show-icons -show drun -modi drun
    #+end_src
** Emacs
   These keybindings open up specific Emacs(client) buffers.

   #+begin_src bash
     super + shift + Return
	  emacsclient -c -n
     super + e; v
	  emacsclient -c -e '(vterm)'
     super + e; d
	  emacsclient -c -e '(dired nil)'
     super + e; e
	  emacsclient -c -e '(elfeed)'
     alt + n
	  bspc rule -a \* -o state=floating && \
	  emacsclient -c -e '(deft)'
   #+end_src
** Reload sxhkd
   Can be used whenever the sxhkd config is updated

   #+begin_src bash
     # make sxhkd reload its configuration files:
     super + Escape
	     pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'
   #+end_src
** Utilities
   General scripts and programs that I want hotkeyed.
*** Screenshot
    Screenshot script built on top of main (and slop). Maim's ~-s~
    allows you to select a region, but also just a window by single
    clicking. Thinking of moving to a rofi-based screenshot system but
    for now this is fine.

    #+begin_src bash
      super + shift + s
	    screenshot.sh -s
    #+end_src
*** Wallpaper
    Pulls up all images in wallpaper directory in a ~pqiv~ montage mode
    window. Allows setting the wallpaper directly using a ~pqiv~
    keybind.

    #+begin_src bash
      super + F1
	    wallpaper.sh
    #+end_src
